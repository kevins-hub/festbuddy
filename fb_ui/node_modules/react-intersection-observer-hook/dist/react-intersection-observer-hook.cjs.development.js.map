{"version":3,"file":"react-intersection-observer-hook.cjs.development.js","sources":["../src/useIntersectionObserver.ts","../src/useTrackVisibility.ts"],"sourcesContent":["import { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { Omit } from './types';\r\n\r\nconst DEFAULT_ROOT_MARGIN = '0px';\r\nconst DEFAULT_THRESHOLD = [0];\r\n\r\nexport type IntersectionObserverHookArgs = Omit<\r\n  IntersectionObserverInit,\r\n  'root'\r\n>;\r\n\r\nexport type IntersectionObserverHookRefCallbackNode = Element | null;\r\n\r\nexport type IntersectionObserverHookRefCallback = (\r\n  node: IntersectionObserverHookRefCallbackNode,\r\n) => void;\r\n\r\nexport type IntersectionObserverHookRootRefCallbackNode = IntersectionObserverInit['root'];\r\n\r\nexport type IntersectionObserverHookRootRefCallback = (\r\n  node: IntersectionObserverHookRootRefCallbackNode,\r\n) => void;\r\n\r\nexport type IntersectionObserverHookResult = [\r\n  IntersectionObserverHookRefCallback,\r\n  {\r\n    entry: IntersectionObserverEntry | undefined;\r\n    rootRef: IntersectionObserverHookRootRefCallback;\r\n  },\r\n];\r\n\r\n// For more info:\r\n// https://developers.google.com/web/updates/2016/04/intersectionobserver\r\n// https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\r\nfunction useIntersectionObserver(\r\n  args?: IntersectionObserverHookArgs,\r\n): IntersectionObserverHookResult {\r\n  const rootMargin = args?.rootMargin ?? DEFAULT_ROOT_MARGIN;\r\n  const threshold = args?.threshold ?? DEFAULT_THRESHOLD;\r\n\r\n  const nodeRef = useRef<IntersectionObserverHookRefCallbackNode>(null);\r\n  const rootRef = useRef<IntersectionObserverHookRootRefCallbackNode>(null);\r\n  const observerRef = useRef<IntersectionObserver | null>(null);\r\n\r\n  const [entry, setEntry] = useState<IntersectionObserverEntry>();\r\n\r\n  const unobserve = useCallback(() => {\r\n    // Disconnect the current observer (if there is one)\r\n    const currentObserver = observerRef.current;\r\n    currentObserver?.disconnect();\r\n    observerRef.current = null;\r\n  }, []);\r\n\r\n  const observe = useCallback(() => {\r\n    const node = nodeRef.current;\r\n    if (node) {\r\n      const root = rootRef.current;\r\n      const options = { root, rootMargin, threshold };\r\n      // Create a observer for current \"node\" with given options.\r\n      const observer = new IntersectionObserver(([newEntry]) => {\r\n        setEntry(newEntry);\r\n      }, options);\r\n      observer.observe(node);\r\n      observerRef.current = observer;\r\n    }\r\n  }, [rootMargin, threshold]);\r\n\r\n  const initializeObserver = useCallback(() => {\r\n    unobserve();\r\n    observe();\r\n  }, [observe, unobserve]);\r\n\r\n  const refCallback = useCallback<IntersectionObserverHookRefCallback>(\r\n    (node) => {\r\n      nodeRef.current = node;\r\n      initializeObserver();\r\n    },\r\n    [initializeObserver],\r\n  );\r\n\r\n  const rootRefCallback = useCallback<IntersectionObserverHookRootRefCallback>(\r\n    (rootNode) => {\r\n      rootRef.current = rootNode;\r\n      initializeObserver();\r\n    },\r\n    [initializeObserver],\r\n  );\r\n\r\n  useEffect(() => {\r\n    // After React 18, StrictMode unmounts and mounts components to be sure\r\n    // if they are resilient effects being mounted and destroyed multiple times.\r\n    // This a behavior to be sure nothing breaks when off-screen components\r\n    // can preserve their state with future React versions.\r\n    // So in StrictMode, React unmounts the component, clean-up of this useEffect gets triggered and\r\n    // we stop observing the node. But we need to start observing after component re-mounts with its preserved state.\r\n    // So to handle this case, we call initializeObserver here.\r\n    // https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html#updates-to-strict-mode\r\n    initializeObserver();\r\n    return () => {\r\n      // We disconnect the observer on unmount to prevent memory leaks etc.\r\n      unobserve();\r\n    };\r\n  }, [initializeObserver, unobserve]);\r\n\r\n  return [refCallback, { entry, rootRef: rootRefCallback }];\r\n}\r\n\r\nexport default useIntersectionObserver;\r\n","import { useState } from 'react';\r\nimport useIntersectionObserver, {\r\n  IntersectionObserverHookArgs,\r\n  IntersectionObserverHookResult,\r\n} from './useIntersectionObserver';\r\n\r\nexport type TrackVisibilityHookArgs = IntersectionObserverHookArgs;\r\n\r\nexport type TrackVisibilityHookResult = [\r\n  IntersectionObserverHookResult[0],\r\n  IntersectionObserverHookResult[1] & {\r\n    isVisible: boolean;\r\n    wasEverVisible: boolean;\r\n  },\r\n];\r\n\r\nfunction useTrackVisibility(\r\n  args?: IntersectionObserverHookArgs,\r\n): TrackVisibilityHookResult {\r\n  const [ref, result] = useIntersectionObserver(args);\r\n  const isVisible = Boolean(result.entry?.isIntersecting);\r\n  const [wasEverVisible, setWasEverVisible] = useState(isVisible);\r\n\r\n  if (isVisible && !wasEverVisible) {\r\n    setWasEverVisible(true);\r\n  }\r\n\r\n  return [ref, { ...result, isVisible, wasEverVisible }];\r\n}\r\n\r\nexport default useTrackVisibility;\r\n"],"names":["DEFAULT_ROOT_MARGIN","DEFAULT_THRESHOLD","useIntersectionObserver","args","rootMargin","threshold","nodeRef","useRef","rootRef","observerRef","useState","entry","setEntry","unobserve","useCallback","currentObserver","current","disconnect","observe","node","root","options","observer","IntersectionObserver","newEntry","initializeObserver","refCallback","rootRefCallback","rootNode","useEffect","useTrackVisibility","ref","result","isVisible","Boolean","isIntersecting","wasEverVisible","setWasEverVisible"],"mappings":"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"}